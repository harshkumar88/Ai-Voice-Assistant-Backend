"""
Django settings for AiVoice project.

Generated by 'django-admin startproject' using Django 4.1.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-cimfi3_=6fxd)yk&=75_*8p4$%b@$mm1rs6eor0zy3=zwafxqw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition
ALLOWED_HOSTS = ["*"]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = (
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS'
)
REST_FRAMEWORK = {
    'EXCEPTION_HANDLER': 'AiVoice.BaseClasses.ApiException.custom_exception_handler'
}

CORS_ORIGIN_REGEX_WHITELIST = (
    '^(http?://)?(\w+\.)?crofarm\.com$',
    '^(https?://)?(\w+\.)?crofarm\.com$',
    'google.com',
    'erp.crofarm.com',
    '^(http?://)?(\w+\.)?web\.crofarm\.com$'
)
CORS_ALLOW_HEADERS = (
    'x-requested-with',
    'content-type',
    'accept',
    'access-token',
    'app-client',
    'HTTP_ACCESS_TOKEN',
    'origin',
    'authorization',
    'responseType',
    'contentType',
    '*'
)
CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173',
    "http://127.0.0.1:5173",
    "https://ai-voice-assistant-frontend.onrender.com"
]

CORS_ALLOWED_ORIGIN_REGEXES = [
    '^(http?://)?(\w+\.)?crofarm\.com$',
    '^(https?://)?(\w+\.)?crofarm\.com$',
    'google.com',
    'erp.crofarm.com',
    '^(http?://)?(\w+\.)?web\.crofarm\.com$'
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'Assistant',
    'AiVoice'
]

MIDDLEWARE = [
    # 'AiVoice.ThirdParty.Authentication.ApplyAuth.LoginRequiredMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware'
]

ROOT_URLCONF = 'AiVoice.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AiVoice.wsgi.application'

PUBLIC_URLS = (

)

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




try:
    # from AiVoice.config import *
    print("DATABASES")
except Exception as e:
    print(e)
    import traceback

    traceback.print_exc()
    # print(DATABASES)
    print("not found config settings")
    pass


